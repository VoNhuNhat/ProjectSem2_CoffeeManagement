/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAO.AreaImplements;
import DAO.CoffeeTableImplements;
import DAO.UserImplements;
import data.Area;
import data.CoffeeTable;
import data.UserAccount;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import static java.awt.Frame.DEFAULT_CURSOR;
import java.awt.Label;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JPanel;

/**
 *
 * @author tranq
 */
public class test extends javax.swing.JFrame {

    /**
     * Creates new form test
     */
    AreaImplements ai = new AreaImplements();
    CoffeeTableImplements ci = new CoffeeTableImplements();
    JPanel jps;
    List<JPanel> listjp = new ArrayList<JPanel>();
    DefaultListModel<String> listModel = new DefaultListModel<>();

    public test() {
        initComponents();
        this.setLocationRelativeTo(null);
        //                        if (quantity < quantityOrder) {
//                            TableProduct findTableProduct = tpi.checkExistTableProduct(productId, tableId, 0);
//                            int quantityOrder = findTableProduct.getQuantityOrder();
//                            int tblProId = findTableProduct.getTblProId();
//                            boolean updatePlusQuantityProduct = pi.updatePlusQuantityProduct(productId, quantityOrder);
//                            if (updatePlusQuantityProduct) {
//                                boolean updateQuantityTableProductEmpty = tpi.updateQuantityTableProductEmpty(tblProId);
//                                if (updateQuantityTableProductEmpty) {
//                                    boolean updateQuantityTableProductClickTable = tpi.updateQuantityTableProductClickTable(tblProId, quantity);
//                                    if (updateQuantityTableProductClickTable) {
//                                        boolean updateSubstractQuantityProduct = pi.updateSubstractQuantityProduct(productId, quantity);
//                                        if (updateSubstractQuantityProduct) {
//                                            sell.loadOrderDetail();
//                                            sell.reloadCategoryProduct();
//                                            alert("Cập nhật số lượng thành công");
//                                            this.dispose();
//                                        }
//                                    }
//                                }
//                            }
//                        }
//                        if (quantity == quantityOrder) {
//                            alert("Cập nhật số lượng thành công");
//                            this.dispose();
//                        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDemo = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listTable = new javax.swing.JList<>();
        textTest = new javax.swing.JTextField();
        nameProduct = new javax.swing.JTextField();
        priceProduct = new javax.swing.JTextField();
        plus = new javax.swing.JButton();
        substract = new javax.swing.JButton();
        productQuantity = new javax.swing.JTextField();
        speech = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jButton1.setText("Get ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        listTable.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listTable);

        textTest.setText("jTextField1");

        nameProduct.setColumns(10);

        priceProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceProductActionPerformed(evt);
            }
        });

        plus.setBackground(new java.awt.Color(34, 167, 240));
        plus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        plus.setForeground(new java.awt.Color(255, 255, 255));
        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        substract.setBackground(new java.awt.Color(34, 167, 240));
        substract.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        substract.setForeground(new java.awt.Color(255, 255, 255));
        substract.setText("-");
        substract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                substractActionPerformed(evt);
            }
        });

        productQuantity.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        productQuantity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        productQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productQuantityKeyPressed(evt);
            }
        });

        speech.setText("Speech Edit");
        speech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speechActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDemoLayout = new javax.swing.GroupLayout(panelDemo);
        panelDemo.setLayout(panelDemoLayout);
        panelDemoLayout.setHorizontalGroup(
            panelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDemoLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(textTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127))
            .addGroup(panelDemoLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jButton1)
                .addGap(42, 42, 42)
                .addComponent(priceProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addGap(193, 193, 193))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDemoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDemoLayout.createSequentialGroup()
                        .addComponent(substract)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(productQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(plus)
                        .addGap(182, 182, 182))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDemoLayout.createSequentialGroup()
                        .addComponent(speech)
                        .addContainerGap())))
            .addGroup(panelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelDemoLayout.createSequentialGroup()
                    .addGap(192, 192, 192)
                    .addComponent(nameProduct)
                    .addGap(192, 192, 192)))
        );
        panelDemoLayout.setVerticalGroup(
            panelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDemoLayout.createSequentialGroup()
                .addGroup(panelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDemoLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDemoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(speech)
                        .addGap(167, 167, 167)
                        .addComponent(textTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(priceProduct))
                .addGap(38, 38, 38)
                .addGroup(panelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(productQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(substract, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(plus))
                .addContainerGap(170, Short.MAX_VALUE))
            .addGroup(panelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelDemoLayout.createSequentialGroup()
                    .addGap(252, 252, 252)
                    .addComponent(nameProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(253, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(527, 527, 527)
                .addComponent(panelDemo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(panelDemo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String selectedValue = listTable.getSelectedValue();
        List<String> selectedValuesList = listTable.getSelectedValuesList();
        boolean bl = true;
        if (!selectedValuesList.isEmpty()) {
            for (String s : selectedValuesList) {
                if (s.charAt(0) == ' ') {
                    bl = false;
                }
            }
            if (bl == true) {
                for (String s : selectedValuesList) {
                    System.out.println(s);
                }
            } else {
                System.out.println("ko dc chon khu vuc");
            }
        } else {
            System.out.println("Hay chon ban");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void substractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_substractActionPerformed
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//                Time arriveHour = 17:00:00 ;
//                Date arriveDate = customerByTableId.getArriveDate();
//                Date now = new Date();
//                String arriveDateString = String.valueOf(arriveDate);
//                String nowString = sdf.format(now);
//                int hourCurrent = LocalDateTime.now().getHour();
//                int minuteCurrent = LocalDateTime.now().getMinute();
//                Calendar calendar = Calendar.getInstance();
//                calendar.setTime(arriveHour);
//                System.out.println(calendar.get(Calendar.HOUR_OF_DAY));
//                System.out.println(calendar.get(Calendar.MINUTE));
//                System.out.println("");
//                System.out.println(hourCurrent);
//                System.out.println(minuteCurrent);
//                System.out.println(arriveDate);
//                System.out.println();
    }//GEN-LAST:event_substractActionPerformed

    private void productQuantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productQuantityKeyPressed

    }//GEN-LAST:event_productQuantityKeyPressed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed

    }//GEN-LAST:event_plusActionPerformed

    private void priceProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceProductActionPerformed

    private void speechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speechActionPerformed
        String str = "";
        String[] split = str.split("\n");
        String text = "";
        int index = 0;
        for (int i = 0; i < split.length; i++) {
            if (!Character.isDigit(split[i].charAt(0))) {
                text += split[i] + "\n";
            }
            index++;
        }
        System.out.println(text);
    }//GEN-LAST:event_speechActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new test().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listTable;
    private javax.swing.JTextField nameProduct;
    private javax.swing.JPanel panelDemo;
    private javax.swing.JButton plus;
    private javax.swing.JTextField priceProduct;
    private javax.swing.JTextField productQuantity;
    private javax.swing.JButton speech;
    private javax.swing.JButton substract;
    private javax.swing.JTextField textTest;
    // End of variables declaration//GEN-END:variables
}

package view;

import DAO.OrderCoffeeImplements;
import DAO.UserImplements;
import Helpers.DialogHelpers;
import Helpers.UserHelpers;
import data.OrderCoffee;
import data.UserAccount;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author omar
 */
public class EmployeeJFrame extends javax.swing.JFrame {

    /**
     * Creates new form LoginForm
     */
    public EmployeeJFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        loadDataTable();
    }
    File avatar = null;
    help al;
    UserImplements ui = new UserImplements();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGender = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableView = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        phoneNumber = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        fullname = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        selectImage = new javax.swing.JButton();
        imageUser = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        btnClear = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        female = new javax.swing.JRadioButton();
        male = new javax.swing.JRadioButton();
        password = new javax.swing.JPasswordField();
        showPassword = new javax.swing.JCheckBox();
        startDate = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabelClose = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelMin = new javax.swing.JLabel();
        btndx = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(44, 62, 80));
        jPanel3.setMaximumSize(new java.awt.Dimension(1366, 768));
        jPanel3.setMinimumSize(new java.awt.Dimension(1366, 768));
        jPanel3.setPreferredSize(new java.awt.Dimension(1366, 768));

        jPanel2.setBackground(new java.awt.Color(44, 62, 80));
        jPanel2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(236, 240, 241));
        jLabel4.setText("Hồ sơ nhân viên");

        tableView.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TÊN ĐĂNG NHẬP", "HỌ VÀ TÊN", "SỐ ĐIỆN THOẠI", "EMAIL", "GIỚI TÍNH", "ĐỊA CHỈ", "NGÀY VÀO LÀM"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableView.setInheritsPopupMenu(true);
        tableView.getTableHeader().setReorderingAllowed(false);
        tableView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableViewMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableView);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(236, 240, 241));
        jLabel5.setText("Thêm mới cập nhật xóa thông tin nhân viên");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tên đăng nhập:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Số Điện Thoại:");

        phoneNumber.setBackground(new java.awt.Color(108, 122, 137));
        phoneNumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        phoneNumber.setForeground(new java.awt.Color(228, 241, 254));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Giới tính:");

        username.setBackground(new java.awt.Color(108, 122, 137));
        username.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        username.setForeground(new java.awt.Color(228, 241, 254));
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Mật khẩu:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Họ và tên:");

        fullname.setBackground(new java.awt.Color(108, 122, 137));
        fullname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fullname.setForeground(new java.awt.Color(228, 241, 254));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Ngày vào làm:");

        selectImage.setBackground(new java.awt.Color(34, 167, 240));
        selectImage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        selectImage.setForeground(new java.awt.Color(255, 255, 255));
        selectImage.setText("Ảnh");
        selectImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectImageActionPerformed(evt);
            }
        });

        imageUser.setToolTipText("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selectImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
            .addComponent(imageUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(selectImage, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imageUser, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Địa Chỉ:");

        address.setBackground(new java.awt.Color(108, 122, 137));
        address.setColumns(20);
        address.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        address.setForeground(new java.awt.Color(228, 241, 254));
        address.setRows(5);
        jScrollPane2.setViewportView(address);

        btnClear.setBackground(new java.awt.Color(34, 167, 240));
        btnClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Làm mới");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(242, 38, 19));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnInsert.setBackground(new java.awt.Color(34, 167, 240));
        btnInsert.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnInsert.setForeground(new java.awt.Color(255, 255, 255));
        btnInsert.setText("Thêm");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(34, 167, 240));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Cập Nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Email:");

        email.setBackground(new java.awt.Color(108, 122, 137));
        email.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        email.setForeground(new java.awt.Color(228, 241, 254));

        buttonGroupGender.add(female);
        female.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        female.setForeground(new java.awt.Color(255, 255, 255));
        female.setText("Nữ");

        buttonGroupGender.add(male);
        male.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        male.setForeground(new java.awt.Color(255, 255, 255));
        male.setSelected(true);
        male.setText("Nam");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });

        password.setBackground(new java.awt.Color(108, 122, 137));
        password.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        password.setForeground(new java.awt.Color(255, 255, 255));

        showPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        showPassword.setForeground(new java.awt.Color(255, 255, 255));
        showPassword.setText("Hiển thị");
        showPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordActionPerformed(evt);
            }
        });

        startDate.setDateFormatString("dd/MM/yyyy");
        startDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1315, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(57, 57, 57)
                                        .addComponent(btnUpdate)
                                        .addGap(44, 44, 44)
                                        .addComponent(btnClear)
                                        .addGap(52, 52, 52))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(84, 84, 84)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel1)
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel10))
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addGap(53, 53, 53)
                                                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(0, 0, Short.MAX_VALUE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(phoneNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(password, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(fullname, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(showPassword)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(58, 58, 58)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel13)))
                                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(male)
                                        .addGap(46, 46, 46)
                                        .addComponent(female)))))
                        .addGap(148, 148, 148))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(481, 481, 481)
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(jLabel13))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel7)
                                    .addComponent(female)
                                    .addComponent(male)
                                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel10)
                                                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(showPassword)))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel11)
                                            .addComponent(fullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(24, 24, 24)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        jPanel1.setBackground(new java.awt.Color(248, 148, 6));

        jLabelClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose.setText("X");
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Quản lí nhân viên");

        jLabelMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMin.setText("-");
        jLabelMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
        });

        btndx.setBackground(new java.awt.Color(34, 167, 240));
        btndx.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btndx.setForeground(new java.awt.Color(255, 255, 255));
        btndx.setText("Trở về");
        btndx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btndx, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 519, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(505, 505, 505)
                .addComponent(jLabelMin)
                .addGap(18, 18, 18)
                .addComponent(jLabelClose)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelMin, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelClose))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btndx)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1376, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadDataTable() {
        DefaultTableModel dataTable = (DefaultTableModel) tableView.getModel();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        dataTable.setRowCount(0);
        List<UserAccount> allUsers = ui.getAllUsers();
        for (UserAccount ua : allUsers) {
            String formatCreatedDate = sdf.format(ua.getCreatedDate());
            Object[] data = {
                ua.getUsername(),
                ua.getFullname(),
                ua.getPhoneNumber(),
                ua.getEmail(),
                (ua.getGender() == 1) ? "Nam" : "Nữ",
                ua.getAddress(),
                formatCreatedDate
            };
            dataTable.addRow(data);
        }
    }

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        
        System.exit(0);

    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked
        
        this.setState(JFrame.ICONIFIED);

    }//GEN-LAST:event_jLabelMinMouseClicked
    

    private void tableViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableViewMouseClicked
        btnInsert.setEnabled(false);
        int index = tableView.getSelectedRow();
        String tenDangNhap = (String) tableView.getValueAt(index, 0);
        UserAccount ua = ui.findUserByUsername(tenDangNhap);
        username.setText(ua.getUsername());
        password.setText(ua.getPassword());
        fullname.setText(ua.getFullname());
        phoneNumber.setText(ua.getPhoneNumber());
        email.setText(ua.getEmail());
        if (ua.getGender() == 1) {
            male.setSelected(true);
        }
        if (ua.getGender() == 0) {
            female.setSelected(true);
        }
        startDate.setDate(ua.getCreatedDate());
        address.setText(ua.getAddress());
        
        if (ua.getImageUser() != null) {
            BufferedImage img = null;
            try {
                img = ImageIO.read(new File("logos", ua.getImageUser()));
                Image imageScale = img.getScaledInstance(imageUser.getWidth(), imageUser.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon imageIcon = new ImageIcon(imageScale);
                imageUser.setIcon(imageIcon);
                imageUser.setToolTipText(ua.getImageUser());
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        } else {
            imageUser.setIcon(null);
            imageUser.setToolTipText("");
        }
    }//GEN-LAST:event_tableViewMouseClicked
    

    private void selectImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectImageActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Images", "jpg", "png");
        fileChooser.setFileFilter(filter);
        try {
            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File fileImage = fileChooser.getSelectedFile();
                avatar = fileImage;
                try {
                    BufferedImage img = ImageIO.read(fileImage.getAbsoluteFile());
                    Image imageScale = img.getScaledInstance(imageUser.getWidth(), imageUser.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon imageIcon = new ImageIcon(imageScale);
                    imageUser.setIcon(imageIcon);
                    imageUser.setToolTipText(fileImage.getName());
                } catch (IOException ex) {
                    Logger.getLogger(EmployeeJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (Exception e) {
            alert("Chỉ được chọn ảnh có đuôi jpg hoặc png !!!");
        }
    }//GEN-LAST:event_selectImageActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        String username = this.username.getText();
        String password = new String(this.password.getPassword()).toString();
        String fullname = this.fullname.getText();
        String phoneNumber = this.phoneNumber.getText();
        String email = this.email.getText();
        int gender = 0;
        if (male.isSelected()) {
            gender = 1;
        }
        if (female.isSelected()) {
            gender = 0;
        }
        Date startDate = this.startDate.getDate();
        String address = this.address.getText();
        String imageUser = null;
        if (avatar != null) {
            imageUser = this.imageUser.getToolTipText();
        }
        int i = 0;
        if (username.length() == 0) {
            alert("Hãy nhập tên đăng nhập");
        } else {
            if (username.length() > 10) {
                alert("Tên đăng nhập tối đa 10 kí tự");
            } else {
                UserAccount checkUsername = ui.findUserByUsername(username);
                if (checkUsername != null) {
                    alert("Tên đăng nhập đã tồn tại");
                } else {
                    i += 1;
                }
            }
        }
        if (i == 1 && password.length() == 0) {
            alert("Hãy nhập mật khẩu");
        } else {
            if (i == 1 && password.length() < 6) {
                alert("Mật khẩu tối thiểu 6 kí tự");
            } else {
                i += 1;
            }
        }
        if (i == 2 && fullname.length() == 0) {
            alert("Hãy nhập họ và tên");
        } else {
            if (i == 2 && fullname.length() > 100) {
                alert("Họ và tên tối đa 100 kí tự");
            } else {
                i += 1;
            }
        }
        if (i == 3 && phoneNumber.length() == 0) {
            alert("Hãy nhập số điện thoại");
        } else {
            if (i == 3 && !phoneNumber.matches("^[0-9]+$")) {
                alert("Số điện thoại phải là số và không chứa kí tự đặc biệt");
            } else {
                if (i == 3 && phoneNumber.length() < 10 || i == 3 && phoneNumber.length() > 10) {
                    alert("Số điện thoại phải là 10 chữ số");
                } else {
                    boolean checkPhoneNumber = ui.findPhoneNumber(phoneNumber);
                    if (i == 3 && checkPhoneNumber) {
                        alert("Số điện thoại đã tồn tại");
                    } else {
                        i += 1;
                    }
                }
            }
        }
        if (i == 4 && email.length() == 0) {
            alert("Hãy nhập email");
        } else {
            Pattern p = Pattern.compile("^[a-z[_]](\\w*[.]?[_]?\\w*)*[@]\\w{3,}[.]\\w{3,}([.]?\\w{2,})?$");
            Matcher m;
            m = p.matcher(email);
            if (i == 4 && !m.find()) {
                alert("Email không đúng định dạng");
            } else {
                boolean checkEmail = ui.findEmail(email);
                if (i == 4 && checkEmail) {
                    alert("Email đã tồn tại");
                } else {
                    i += 1;
                }
            }
        }
        if (i == 5 && startDate == null) {
            alert("Hãy chọn ngày bắt đầu");
        } else {
            i += 1;
        }
        if (i == 6 && address.length() == 0) {
            alert("Hãy nhập địa chỉ");
        } else {
            i += 1;
        }
        if (i == 7) {
            UserAccount ua = new UserAccount(0, fullname, username, password, phoneNumber, email, gender, address, 1, imageUser, startDate, null);
            boolean bl = ui.createNewUser(ua);
            if (bl) {
                if (avatar != null) {
                    UserHelpers.saveImage(avatar);
                    avatar = null;
                }
                alert("Thêm mới người dùng thành công");
                loadDataTable();
                clear();
            } else {
                alert("Lỗi khi thêm mới người dùng");
            }
        }
    }//GEN-LAST:event_btnInsertActionPerformed
    public void clear() {
        username.setText("");
        password.setText("");
        showPassword.setSelected(false);
        showPassword.setText("Hiển thị");
        password.setEchoChar('*');
        fullname.setText("");
        phoneNumber.setText("");
        email.setText("");
        male.setSelected(true);
        startDate.setDate(null);
        address.setText("");
        imageUser.setIcon(null);
        imageUser.setToolTipText("");
        btnInsert.setEnabled(true);
    }
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int index = tableView.getSelectedRow();
        String oldUsername = null;
        String oldPhoneNumber = null;
        String oldEmail = null;
        
        if (index > 0 || index == 0) {
            oldUsername = (String) tableView.getValueAt(index, 0);
            oldPhoneNumber = (String) tableView.getValueAt(index, 2);
            oldEmail = (String) tableView.getValueAt(index, 3);
        }
        
        String newUsername = this.username.getText();
        String newPhoneNumber = this.phoneNumber.getText();
        String newEmail = this.email.getText();
        
        String password = new String(this.password.getPassword()).toString();
        String fullname = this.fullname.getText();
        int gender = 0;
        if (male.isSelected()) {
            gender = 1;
        }
        if (female.isSelected()) {
            gender = 0;
        }
        Date startDate = this.startDate.getDate();
        String address = this.address.getText();
        String imageUser = null;
        if (this.imageUser.getToolTipText() != "") {
            imageUser = this.imageUser.getToolTipText();
        }
        
        int i = 0;
        if (oldUsername == null) {
            alert("Không thể cập nhật");
        } else {
            if (newUsername.length() == 0) {
                alert("Hãy nhập tên đăng nhập");
            } else {
                if (newUsername.length() > 10) {
                    alert("Tên đăng nhập tối đa 10 kí tự");
                } else {
                    List<UserAccount> checkUsername = ui.checkExistUsername(oldUsername, newUsername);
                    if (!checkUsername.isEmpty()) {
                        alert("Tên đăng nhập đã tồn tại");
                    } else {
                        i += 1;
                    }
                }
            }
            if (i == 1 && password.length() == 0) {
                alert("Hãy nhập mật khẩu");
            } else {
                if (i == 1 && password.length() < 6) {
                    alert("Mật khẩu tối thiểu 6 kí tự");
                } else {
                    i += 1;
                }
            }
            if (i == 2 && fullname.length() == 0) {
                alert("Hãy nhập họ và tên");
            } else {
                if (i == 2 && fullname.length() > 100) {
                    alert("Họ và tên tối đa 100 kí tự");
                } else {
                    i += 1;
                }
            }
            if (i == 3 && newPhoneNumber.length() == 0) {
                alert("Hãy nhập số điện thoại");
            } else {
                if (i == 3 && !newPhoneNumber.matches("^[0-9]+$")) {
                    alert("Số điện thoại phải là số và không chứa kí tự đặc biệt");
                } else {
                    if (i == 3 && newPhoneNumber.length() < 10 || i == 3 && newPhoneNumber.length() > 10) {
                        alert("Số điện thoại phải là 10 chữ số");
                    } else {
                        List<UserAccount> checkPhoneNumber = ui.checkExistPhoneNumber(oldPhoneNumber, newPhoneNumber);
                        if (!checkPhoneNumber.isEmpty()) {
                            alert("Số điện thoại đã tồn tại");
                        } else {
                            i += 1;
                        }
                    }
                }
            }
            if (i == 4 && newEmail.length() == 0) {
                alert("Hãy nhập email");
            } else {
                Pattern p = Pattern.compile("^[a-z[_]](\\w*[.]?[_]?\\w*)*[@]\\w{3,}[.]\\w{3,}([.]?\\w{2,})?$");
                Matcher m;
                m = p.matcher(newEmail);
                if (i == 4 && !m.find()) {
                    alert("Email không đúng định dạng");
                } else {
                    List<UserAccount> checkEmail = ui.checkExistEmail(oldEmail, newEmail);
                    if (!checkEmail.isEmpty()) {
                        alert("Email đã tồn tại");
                    } else {
                        i += 1;
                    }
                }
            }
            if (i == 5 && startDate == null) {
                alert("Hãy chọn ngày bắt đầu");
            } else {
                i += 1;
            }
            if (i == 6 && address.length() == 0) {
                alert("Hãy nhập địa chỉ");
            } else {
                i += 1;
            }
            if (i == 7) {
                UserAccount getUser = ui.findUserByUsername(oldUsername);
                int userId = getUser.getUserId();
                UserAccount ua = new UserAccount(userId, fullname, newUsername, password, newPhoneNumber, newEmail, gender, address, 1, imageUser, startDate, null);
                boolean bl = ui.updateUser(ua);
                if (bl) {
                    if (avatar != null) {
                        UserHelpers.saveImage(avatar);
                        avatar = null;
                    }
                    alert("Cập nhật người dùng thành công");
                    loadDataTable();
                    clear();
                } else {
                    alert("Lỗi khi cập nhật người dùng");
                }
            }
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int index = tableView.getSelectedRow();
        String username = null;
        if (index == 0 || index > 0) {
            username = (String) tableView.getValueAt(index, 0);
        }
        if (username != null) {
            if (DialogHelpers.confirm(null, "Bạn có muốn xóa nhân viên này?") == JOptionPane.YES_OPTION) {
                OrderCoffeeImplements oci = new OrderCoffeeImplements();
                List<OrderCoffee> orderCoffeeByUser = oci.getOrderCoffeeByUser(username);
                if (!orderCoffeeByUser.isEmpty()) {
                    alert("Không thể xóa nhân viên đang có dữ liệu trong hóa đơn");
                } else {
                    boolean deleteUser = ui.deleteUser(username);
                    if (deleteUser) {
                        alert("Xóa nhân viên thành công");
                        loadDataTable();
                        clear();
                    } else {
                        alert("Lỗi khi xóa người dùng");
                    }
                }
            }
        } else {
            alert("Không thể xóa được");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clear();
        loadDataTable();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btndxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndxActionPerformed
        MainJFrame mj = new MainJFrame();
        mj.setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btndxActionPerformed

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleActionPerformed

    private void showPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordActionPerformed
        if (showPassword.isSelected()) {
            showPassword.setText("Ẩn");
            password.setEchoChar((char) 0);
        } else {
            showPassword.setText("Hiển thị");
            password.setEchoChar('*');
        }
    }//GEN-LAST:event_showPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea address;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btndx;
    private javax.swing.ButtonGroup buttonGroupGender;
    private javax.swing.JTextField email;
    private javax.swing.JRadioButton female;
    private javax.swing.JTextField fullname;
    private javax.swing.JLabel imageUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton male;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField phoneNumber;
    private javax.swing.JButton selectImage;
    private javax.swing.JCheckBox showPassword;
    private com.toedter.calendar.JDateChooser startDate;
    private javax.swing.JTable tableView;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
private void alert(String message) {
        al = new help(message);
        al.setVisible(true);
    }
}
